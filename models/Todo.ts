import mongoose, { Model, Schema } from 'mongoose';
import { ToDo } from '../interfaces';

export interface IToDo extends ToDo {    
}

/**
 * @swagger
 * components:
 *   schemas:
 *     ToDo:
 *       type: object
 *       properties:
 *         _id:
 *          type: string
 *          description: The id of the ToDo generated by the database.
 *          example: 6351ab4da21ae8120510135f
 *         description:
 *           type: string
 *           description: The description of the activity to do.
 *           example: I have to do the laundry.
 *         createdAt:
 *           type: number
 *           description: The date in format number when the ToDo was inserted in the database.
 *           example: 1600000000000
 *         status:
 *           type: enum
 *           enum: [ 'ToDo' , 'In Progress' , 'Done' ]  
 *           description: The status of the activity.   
 *           example: ToDo
 *         user:
 *           $ref: '#/components/schemas/User'
 *         __v:
 *           type: number
 *           description: The version of the ToDo generated by the database.
 */
const todoSchema = new Schema({
    description: { 
        type: String, 
        required: [true, 'Description is required']
    },
    createdAt: { type: Number },
    status: {
        type: String,
        enum: {
            values: ['ToDo' , 'In Progress' , 'Done'],
            message: '{VALUE} is not allowed.'
        },
        default: 'ToDo',
    },
    user: {
        type: Schema.Types.ObjectId,
        ref: 'User',
        required: true
    }
});


const ToDoModel: Model<IToDo> = mongoose.models.ToDo || mongoose.model('ToDo', todoSchema );

export default ToDoModel;